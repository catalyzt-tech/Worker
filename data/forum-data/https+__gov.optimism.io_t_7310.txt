{
  "title": "[FINAL] Upgrade Proposal #3: Delta Network Upgrade",
  "content": "EXECUTIVE SUMMARY\n\n * Test in Prod proposes Delta network upgrade, which activates Span Batches for\n   OP Mainnet and all other OP Chains.\n * Span Batches implement a new batching specification that reduces L1 costs by\n   ~97% for inactive chains\n   [https://op-tip.notion.site/Span-Batch-Design-Docs-b85e599a47774dcdb8171cc84cab2476#:~:text=PGN%20(Further%20Analysis%20Notebook)]\n   (165 ETH → 5 ETH).\n * We expect Span Batches to derisk launching new OP Chains by meaningfully\n   reducing L1 costs for inactive chains.\n\nHello! This is Test in Prod, one of the core development teams\n[https://gov.optimism.io/t/welcoming-test-in-prod-to-the-optimism-collective/6944]\nof Optimism Collective.\n\nThis is a proposal for the Delta network upgrade, which activates Span Batches.\nSpan Batches is a new batching spec from Test in Prod, building upon initial\ndesigns by Protolambda.\n\nSpan Batches removes the overhead of the current batching specs by encoding\nconsecutive L2 blocks into one batch. This leads to reducing L1 costs by ~97%\nfor inactive chains, and 6%~11% for performant chains like OP Mainnet or Base\nMainnet based on our backtesting results\n[https://op-tip.notion.site/Span-Batch-Design-Docs-b85e599a47774dcdb8171cc84cab2476#:~:text=the%20hard%20fork.-,Expected%20Results,-We%20had%20backtests].\n\nSpan Batches will support the adoption of the OP Stack by meaningfully reducing\nL1 costs for OP Chains, therefore reducing the risks of launching new L2s with\nthe OP Stack.\n\n\nTECHNICAL SUMMARY\n\n\nSPECIFICATION\n\nThis upgrade (“Delta”) contains a single consensus-layer feature, Span Batches.\nPlease refer to the following documents for the technical information on Span\nBatches:\n\n * Design Docs\n   [https://op-tip.notion.site/Span-Batch-Design-Docs-b85e599a47774dcdb8171cc84cab2476?pvs=74]\n * Spec Docs\n   [https://github.com/ethereum-optimism/optimism/blob/develop/specs/span-batches.md]\n * Github Issue Tracker\n   [https://github.com/ethereum-optimism/optimism/issues/7454]\n * Research Repository [https://github.com/testinprod-io/span-batch-research]\n   (includes backtesting results & code for various OP Chains)\n\n\nSECURITY CONSIDERATIONS\n\nThe Span Batch is a consensus-critical feature. It is not required to undergo a\nsecurity audit according to the OP Labs Audit Framework\n[https://gov.optimism.io/t/op-labs-audit-framework-when-to-get-external-security-review-and-how-to-prepare-for-it/6864];\nSpan Batches impacts liveness & reputational quadrant, instead of existential &\nsafety parts in the rubrics of the Audit Framework—specifically derivation aside\nfrom deposits and batching. The Audit Framework doesn’t suggest audits in the\nliveness & reputational quadrant, but rather testing via progressive real-world\nusage.\n\nThe Span Batch doesn’t have changes on the state transitions, so there is no\npossibility that users’ states can change in an unintended way. In the worst\ncase, some transactions could be omitted.\n\nTherefore, Test in Prod went through the following steps to ensure the safety of\nthis proposal, focusing on the liveness parts:\n\n1) Security review with OP Labs\n\nTest in Prod passed a security review with OP Labs. Since the Delta upgrade\nisn’t related to user assets, but instead implements a consensus upgrade, we\nfocused on reviewing cases where the consensus could fail and built contingency\nplans for the failure. Please refer to the Contingency Plans section in the\ncurrent proposal for detailed contingency plans.\n\nThroughout the review, we figured that the Span Batch deployment would be less\nlikely to impact Sequencer’s pre-confirming block production—the unsafe head\nprogression; we expect end users to be less likely to be impacted in the\nmajority of failure scenarios.\n\n2) Ran verification script on Superchain Devnet & Testnets\n\nTest in Prod prepared the verification script\n[https://github.com/ethereum-optimism/optimism/pull/8474] for Span Batches. The\nscript checks the entire consensus process from posting batches on L1 to\nderiving L2 blocks from L1. It tests if there’s a consensus failure by detecting\nunsafe reorgs—ensuring nodes derive the same state that the Sequencer originally\ncalculated before posting batches. Please refer to the Functionality\nVerification Guide\n[https://op-tip.notion.site/Delta-Hard-Fork-Functionality-Verification-4dba746fd3e2409a8a3c9c362fa27dd3]\nfor more details.\n\nThe verification script works as follows:\n\n * Send various types of transactions to the L2.\n * Record the transactions’ hashes & included unsafe blocks’ hashes.\n * Poll if the included blocks are consolidated to safe\n   [https://github.com/ethereum-optimism/optimism/blob/develop/specs/glossary.md#unsafe-block-consolidation].\n * Compare recorded unsafe blocks’ hashes to safe blocks that include\n   transactions.\n   * If same, it’s a success!\n\n3) E2E tests & unit tests\n\nTest in Prod prepared the e2e tests & unit tests for Span Batches. They cover a\nwide range of scenarios and check if the code operates as intended. Here are\nGithub PRs for e2e tests: #1\n[https://github.com/ethereum-optimism/optimism/pull/7291] #2\n[https://github.com/ethereum-optimism/optimism/pull/8047] #3\n[https://github.com/ethereum-optimism/optimism/pull/8358]\n\n\nIMPACT SUMMARY\n\n\nPERFORMANCE IMPACT\n\nSpan Batch saves more L1 fees than the current state of the OP Stack, and\nsavings increase the less active the chain is. Therefore, Test in Prod expects\nmore savings on L1 fees for less-active chains; we expect to save L1 fees by\n~97% for low-throughput chains and 6%~11% for high-throughput chains like OP\nMainnet or Base Mainnet.\n\nTest in Prod backtested several OP Chains and prepared the expected L1 fee\nsavings in %. Please refer to the Expected Result section in the Design Docs\n[https://op-tip.notion.site/Span-Batch-Design-Docs-b85e599a47774dcdb8171cc84cab2476#:~:text=the%20hard%20fork.-,Expected%20Results,-We%20had%20backtests]\nfor the result.\n\n\nUSER IMPACT\n\nDelta doesn’t include any direct impact on the users’ side. Also, Test in Prod\ndoesn’t expect downtime for the Delta upgrade.\n\n\nNODE IMPACT\n\nNodes will be unable to sync the chain if nodes don’t perform the software\nupdate until the op-batcher operator starts posting Span Batches. Thus, nodes\nare required to update software versions to keep in sync with the OP Chains.\n\nPlease refer to the Guides for Nodes section in the current proposal for the\nupgrade details.\n\n\nUPGRADE DETAILS\n\nAfter Delta hard fork, Span Batches submission won’t be activated automatically;\nthe op-batcher operators should restart their instance with the Span Batches\nenabled. Therefore, even though Delta hard fork time passes, nothing will happen\nuntil the op-batcher operator explicitly starts posting batches in the Span\nBatch.\n\nOP Chains can use (post & derive) both Singular Batches and Span Batches after\nthe Delta hard fork.\n\n\nACTION PLANS\n\n\nTIMELINE (INCLUDING FINISHED ITEMS)\n\nTest in Prod proposes 00:00:00 Feb 22, 2024, UTC for the Delta hard fork\ntime—1707922800 in Unix Timestamp. It’s three weeks after Voting Cycle #17 ends,\nand two weeks after the Citizens’ House veto period.\n\nThe Delta upgrade has already been activated on op-goerli, op-sepolia,\nbase-goerli, base-sepolia, pgn-sepolia, zora-sepolia, and Superchain Devnet\n(operated by OP Labs, Base, and Conduit).\n\nHere’s the list of the timeline for Delta including finished items:\n\n * Superchain Devnet activation at 00:00:00, Dec 08, 2023 UTC.\n * Goerli Testnets activation at 00:00:00, Dec 21, 2023 UTC.\n * Sepolia Testnets activation at 00:00:00, Dec 22, 2023 UTC.\n * Voting results are final & start to notify upgrading nodes at 19:00:00, Jan\n   31, 2024 UTC.\n   * Including the one-week veto period.\n * (Proposed) Mainnet activation at 00:00:00, Feb 22, 2024 UTC.\n   * Appended one week due to the veto period.\n\n\nCONTINGENCY PLANS\n\nOur contingency plans for the unexpected failure of the Delta upgrade are as\nfollows: op-batcher disables posting Span Batches, start posting legacy batches\n(Singular Batches), prepare the fix, and enable Span Batches again. In this way,\nwe expect the impact on the user side will be minimized while resolving the\nissues—the sequencer would continue pre-confirming blocks as normal, but batch\nsubmission would be halted until the op-batcher restarts to push Singular\nBatches.\n\nHowever, if there’s an unexpected critical issue where we need nodes’ action, we\nhave prepared a way for nodes to disable the upgrade by using --override.delta\nflag on op-node. Test in Prod will work with OP Labs to monitor, communicate,\nand alert relevant parties upon the upgrade in such cases.\n\n\nSOFTWARE VERSIONS\n\nThe code for the Delta upgrade is ready in the following Optimism monorepo hash:\n54a7dbf8aa9b982f9c6a54cbbe448be41c0b7bc7\n[https://github.com/ethereum-optimism/optimism/commit/54a7dbf8aa9b982f9c6a54cbbe448be41c0b7bc7].\n\nNodes can manually set the Delta hard fork time with the preceding code.\nHowever, nodes will not automatically activate Delta on Mainnet as the Delta\nhard fork time is not embedded in the code; it cannot be embedded since Delta\nhas not yet been approved by governance.\n\nIf the governance approves the Delta hard fork and finalizes the hard fork time,\nTest in Prod will work with OP Labs to prepare the new release that embeds the\nMainnet hard fork time and notify the community. With the new release, nodes\nwon’t have to manually set the Delta hard fork time; but they will automatically\nactivate the Delta upgrade.\n\nThe following versions are deployed in the testnets:\n\n * op-node: v1.4.1\n   [https://github.com/ethereum-optimism/optimism/releases/tag/op-node%2Fv1.4.1]\n * op-batcher: v1.4.1\n   [https://github.com/ethereum-optimism/optimism/releases/tag/op-batcher%2Fv1.4.1]\n * op-proposer: v1.4.1\n   [https://github.com/ethereum-optimism/optimism/releases/tag/op-proposer%2Fv1.4.1]\n * op-geth: v1.101304.2\n   [https://github.com/ethereum-optimism/op-geth/releases/tag/v1.101304.2]\n\n\nGUIDES FOR NODE OPERATORS\n\nNode operators are required to upgrade the software versions. Please refer to\nthe following guides:\n\n * Delta Upgrade Guide in Optimism Docs\n   [https://docs.optimism.io/builders/node-operators/network-upgrades/delta]\n * Delta Node Upgrade Guide\n   [https://op-tip.notion.site/Delta-Node-Upgrade-Guide-c4627f9dc02e4ed884d2420e8a9f8777]\n * (For op-batcher operators) Delta Hard Fork Functionality Verification Guide\n   [https://op-tip.notion.site/Delta-Hard-Fork-Functionality-Verification-4dba746fd3e2409a8a3c9c362fa27dd3]\n\n\nCONCLUSION\n\nThis proposal outlines the Delta upgrade that includes Span Batches. This\nupgrade reduces the size overheads of the current specs in a significant step\nfor less-active chains, and it leads to alleviating the risks of launching new\nOP Stack L2s.\n\nBy reducing the L1 fees and risks with the Delta upgrade, we expect to alleviate\nburdens for less-active chains, help easier adoptions of the OP Stack, and head\none step forward to the Superchain future.\n\nWe don’t expect sequencer downtime for the Delta hard fork & activating Span\nBatches.",
  "views": 4396,
  "like_count": 74,
  "word_count": 2805,
  "answer": [
    {
      "content": "Hello! We are proposing the Mainnet activation at 00:00:00, Feb 22, 2024 UTC.\n\n\n[https://dub1.discourse-cdn.com/bc41dd/user_avatar/gov.optimism.io/testinprod_io/48/7749_2.png]\ntestinprod_io:\n\n> (Proposed) Mainnet activation at 00:00:00, Feb 22, 2024 UTC.",
      "created_at": "2024-01-19T09:39:25.759Z",
      "trust_level": 2,
      "username": "testinprod_io",
      "admin": false,
      "moderator": false,
      "staff": false,
      "like_count": 7
    },
    {
      "content": "wowow\n\nthis is super exciting!",
      "created_at": "2024-01-05T16:28:56.073Z",
      "trust_level": 2,
      "username": "Harper",
      "admin": false,
      "moderator": false,
      "staff": false,
      "like_count": 4
    },
    {
      "content": "Does this need an audit? Or was that included in the security review by Labs?\n\nAlso, it would be helpful if a Labs representative can confirm when a\ncontributor team goes through a step like a collaborative security review. Just\nas a standard process going forward.",
      "created_at": "2024-01-08T14:09:42.691Z",
      "trust_level": 2,
      "username": "GFXlabs",
      "admin": false,
      "moderator": false,
      "staff": false,
      "like_count": 4
    },
    {
      "content": "Hi Joxes! Thanks for the question.\n\n\n[https://dub1.discourse-cdn.com/bc41dd/user_avatar/gov.optimism.io/joxes/48/5814_2.png]\nJoxes:\n\n> is this when the proposer generates and posts a new state root, right?\n\nNo. This case refers to when the op-batcher has an unexpected bug where it omits\nsome transactions.\n\n\n[https://dub1.discourse-cdn.com/bc41dd/user_avatar/gov.optimism.io/joxes/48/5814_2.png]\nJoxes:\n\n> The proposer would just ignore the batch -or a portion of it-?.\n\nThe proposer cannot omit any portion of the batch.\n\nLet us know if you have any more questions!",
      "created_at": "2024-01-10T07:16:27.547Z",
      "trust_level": 2,
      "username": "testinprod_io",
      "admin": false,
      "moderator": false,
      "staff": false,
      "like_count": 4
    },
    {
      "content": "I am an Optimism delegate\n[https://gov.optimism.io/t/pgov-delegate-communication-thread/6059] with\nsufficient voting power and I believe this proposal is ready to move to a vote.",
      "created_at": "2024-01-10T16:43:10.618Z",
      "trust_level": 3,
      "username": "PGov",
      "admin": false,
      "moderator": false,
      "staff": false,
      "like_count": 3
    }
  ],
  "created_at": "2024-01-05T07:35:07.384Z"
}