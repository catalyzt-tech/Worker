{
  "title": "Season 6: [DRAFT] Standard Rollup Charter",
  "content": "SEASON 6: [DRAFT] STANDARD ROLLUP CHARTER\n\n--------------------------------------------------------------------------------\n\n// This is a draft for community feedback. A final draft will be ratified by the\nToken House in Season 6. For more context on the Blockspace Charter Framework,\nsee here.\n[https://gov.optimism.io/t/season-6-introducing-blockspace-charters-superchain-first-governance/8133]\n\n\nINTRODUCTION\n\nThe Standard Rollup is the Optimism Collective’s flagship, high-security\nblockspace product. The Standard Rollup targets the Collective’s highest bar for\nsecurity, uptime, and decentralization, with Optimism Governance responsible for\nupholding the protections outlined in the Law of Chains\n[https://github.com/ethereum-optimism/OPerating-manual/blob/main/Law%20of%20Chains.md].\nFurther, the Standard Rollup should have all potential changes treated with\ncareful consideration by the governance community, to enable long-term,\nsustainable projects to be built around Standard Rollup blockspace with\nconfidence.\n\n\nCRITERIA\n\nThe criteria for being a Standard Rollup consist of a set of deterministic\nonchain criteria to ensure that chains are well-configured, up-to-date, and\nsecured by the Optimism Security Council, as well as a set of lightweight\noffchain criteria initially checked by the Optimism Foundation.\n\n\nDETERMINISTIC (ONCHAIN) CRITERIA\n\nThe deterministic criteria for Standard Rollups consist of 3 primary components:\n\n 1. Version Check: ensuring that all L1 smart contracts are the most up-to-date,\n    governance-approved version of the OP Stack codebase, and, if the chain has\n    been upgraded in the past, that the previous versions were a standard\n    release of the codebase.\n\n 2. Configuration Check: ensuring that all configuration values for the chain\n    are within high-security, well-tested bounds, and that all administrative\n    roles are set correctly.\n\n 3. Solvency Check: ensuring all of the chain’s L1 outputs are correct,\n    preventing historic malicious withdrawals from causing the bridge to become\n    undercollateralized.\n\nThe precise code which can be used to perform these checks can be found [here],\nand should be considered the canonical, deterministic criteria for what\nblockspace is governed via this charter. However, some of the key points are\nincluded here for readability:\n\n * The chain’s genesis state and predeploy (0x420000...) contracts are standard,\n   uniform implementations with no malicious code.\n\n * The protocol parameters are constrained to high-security, high-stability,\n   well-tested values.\n\n * The Security Council (currently in Phase 0) for the chain’s L1 bridge\n   contracts, and any other roles .\n\n * A standard fee split to the Collective is enforced by smart contracts, as\n   specified [here] and implemented by [this contract].\n\n\nOFFCHAIN CRITERIA\n\nIn addition to the above deterministic criteria, the Optimism Foundation will\nperform a limited set of manual, offchain checks at its discretion before\ninclusion as a Standard Rollup. These checks are:\n\n 1. ChainID check: ensuring that the Chain ID is unique and does not collide\n    with a pre-existing EVM chain.\n\n 2. Gas Limit check: ensuring that the Chain’s initial GasLimit is configured to\n    a reasonable value based on the then-current status of OP Stack performance\n    testing. (see below for additional context on Gas Limit policy)\n\n 3. Security Monitoring: ensuring certain standard monitoring tools have been\n    deployed for every chain.\n\n 4. Governor/Servicer verification: verifying at the social layer that the chain\n    is indeed deployed and operated by the parties in question, and are not\n    being impersonated.\n\n 5. Other checks: running necessary checks related to compliance with applicable\n    laws.\n\nThe Optimism Foundation’s final inclusion of a chain in the superchain-registry\nrepo will be the canonical indicator of passing the offchain criteria. Thus, in\nsummation, the community can determine whether a given chain falls under the\nscope of this charter by checking that:\n\n * The Chain passes all Deterministic Criteria checks\n\n * The Chain has been included by the Optimism Foundation in the\n   superchain-registry repo.\n\nOver time, it should be expected that the Foundation’s subjective checks are\neither eliminated, or transitioned to a process run directly by the community,\nso that inclusion may be determined purely by onchain data.\n\n\nGOVERNING POLICIES\n\nThe Standard Rollup’s governing policies implement additional “reactive”\nprocedures in the event that one or more stakeholder protections in the Law of\nChains are violated in such a way that the protocol cannot naturally handle\nthem. Each of these governing policies include reference to a specific\nprotection in the Law of Chains.\n\nIn its current form, all governing policies’ relevant enforcement actions would\nbe taken by the L1ProxyAdmin role, which is held by the Phase 0 Security\nCouncil. As such, all enforcement actions will follow the standard Protocol\nUpgrade vote procedure, which is the existing path used for governance to\nexercise the L1ProxyAdmin role. In the future, policies may include different\nenforcement mechanisms (e.g. via unilateral action by other councils, or via\ndirect onchain governor outcomes given explicit authority in the protocol.)\n\n\nGOVERNOR KEY RECOVERY\n\nIn the current version of the OP Stack, the SystemConfigOwner is permitted to\nchange certain chain configuration values. According to the Law of Chains,\ncontrol of some of these values are afforded to the Chain Governor (e.g.\ntransaction fee margin), and others are afforded to the Chain Servicer (e.g. the\nbatcher hotkey).\n\nFor convenience, the Configuration Check in the above criteria permits either\nthe Chain Servicer or the Chain Governor to be the SystemConfigOwner, so that\nChain Governors can delegate all configuration updates to Servicers. However,\nbecause the Chain Governor is also protected by the Law of Chains to be able to\nswitch between Chain Servicers\n[https://github.com/ethereum-optimism/OPerating-manual/blob/main/Law%20of%20Chains.md#:~:text=This%20should%20include%20the%20ability%20for%20the%20Chain%20Governor%20to%20change%20the%20Sequencer%20on%20its%20OP%20Chain],\nultimate control of the SystemConfigOwner role should belong to the Chain\nGovernor.\n\nIn the event that a Chain Servicer stops fulfilling the wishes of the Chain\nGovernor for those values which the Law of Chains states they should be able to\ncontrol, or refuses to transfer control of the SystemConfigOwner role in the\nevent that the Chain Governor desires to switch to a different servicer, then\nthe Chain Governor may submit a vote to Optimism Governance to have the Phase 1\nSecurity Council recover the role to an account they control.\n\n\nSEQUENCER CENSORSHIP\n\nIn the event that a sequencer is determined to be intentionally censoring valid\nuser transactions, or experiencing unreasonable downtime impacting applications\non the chain, they are violating the User Protection of Security, Uptime, and\nLiveness\n[https://github.com/ethereum-optimism/OPerating-manual/blob/main/Law%20of%20Chains.md#:~:text=a%20timely%20manner.-,Security%2C%20Uptime%2C%20and%20Liveness,-%3A%20Block%20production]\nin the Law of Chains.\n\nIn the event that a Chain Governor refuses to change its sequencer in reaction,\nthe community may submit a vote to Optimism Governance to remove the Chain\nGovernor as the SystemConfigOwner and appoint a new sequencer.\n\n\nRESPONSIBLE GASLIMITS\n\nThe OP Stack is rapidly evolving and the boundaries of its performance continue\nto be pushed. As such, the protocol currently does not implement a hardcoded\nupper bound on the Gas Limit for a chain. However, this ability must be\nresponsibly exercised to ensure fulfillment of User Protections.\n[https://github.com/ethereum-optimism/OPerating-manual/blob/main/Law%20of%20Chains.md.]\nThus:\n\n * Before any GasLimit increase, Chain Governors should submit to the community\n   a public load test which demonstrates stability at that limit.\n\n * After any GasLimit increase, if the chain experiences a significant\n   degradation in performance or stability, the GasLimit should promptly be\n   lowered back to its previous value.\n\nIf a Chain Governor fails to take these steps, the community may submit a vote\nto Optimism Governance to remove the Chain Governor as the SystemConfigOwner and\nlower the GasLimit.\n\n\nRESPONSIBLE BATCH SUBMISSION\n\nThe current version of the OP Stack allows for batches to be submitted with up\nto a 12 hour delay after initial reception by the sequencer (the “sequencing\nwindow”). However, Sequencers are expected to submit at least twice as\nfrequently (i.e. every 6 hours). This affords sufficient time to batch submit in\nthe case of failures or downtime, fulfilling the User Protection to Security,\nUptime, and Liveness\n[https://github.com/ethereum-optimism/OPerating-manual/blob/main/Law%20of%20Chains.md#:~:text=a%20timely%20manner.-,Security%2C%20Uptime%2C%20and%20Liveness,-%3A%20Block%20production].\n\nIn the event that a Chain Governor refuses to change its sequencer which\nrepeatedly and intentionally violates this practice, the community may submit a\nvote to Optimism Governance to remove the Chain Governor as the\nSystemConfigOwner and appoint a new compliant sequencer.\n\n\nFEE MARGINS\n\nThe Law of Chains affords Chain Governors the ability to set fee margins for the\nchain. However, setting the fee margin significantly high can be a form of\neconomic censorship — by making transactions prohibitively expensive to submit,\nthe Governor could effectively violate the User Protection to censorship\nresistance.\n[https://github.com/ethereum-optimism/OPerating-manual/blob/main/Law%20of%20Chains.md]\nA Chain Governor that configures the OP Chain in such a way that Users\nindirectly cannot transact (e.g.%2C by setting a prohibitively high gas markup.)\n\nThe Standard Rollup should allow a maximum fee margin of 50% (i.e., the average\ncost of transactions should not exceed twice the cost of batch submission). If a\nChain Governor sets the fee margin in excess of this, the community may submit a\nvote to Optimism Governance to remove the Chain Governor as the\nSystemConfigOwner and lower the Fee Margin.\n\n\nRESOURCEMETERING\n\nThe SystemConfigOwner role is currently able to modify the ResourceMetering\nstruct, a low-level set of values which set certain properties of L1→L2 message\nrules. This is a low-level variable with no reason to be changed outside of a\nprotocol upgrade.\n\nIf a SystemConfigOwner (either Servicer or Governor) changes this value, the\ncommunity may submit a vote to Optimism Governance to remove the relevant party\nand revert the change.\n\n\nPRECOMMITMENTS\n\nThis section commits to anticipated changes (or lack thereof) for future\nupgrades to this charter.\n\n\nCOLLECTIVE FEE TAKE\n\nThe current Blockspace Charter specifies a fee split to the collective of the\ngreater of 1) 2.5% of transaction fee revenue and 2) 15% of chain profit (fee\nrevenue - L1 submission cost). It is extremely important to provide Stakeholders\nin the Collective with a reliable economic model on which they can build\nreliable, sustainable long-term projects. By ratifying this Blockspace Charter,\nthe Collective is signaling its precommitment to all standard rollups that it\nwill not modify the fee split parameters outlined above for 5 years, until\n[June] 2029.\n\nThis does not preclude changes or improvements to the implementation of the fee\nsplit contracts, so long as they preserve the original spirit. In the event that\nnew sources of fees (or operating costs) are introduced to the protocol, the\neconomics should be updated with minimized impact to the existing expectations\nand projects on the Superchain.\n\n\nGOVERNOR/SERVICER ROLE SEPARATION\n\nSome policies above (e.g. Governor Key Recovery) arise from an overloading of\nthe SystemConfigOwner role to control configurability options which the Law of\nChains affords separately to Governors and Servicers. In a future upgrade, the\nCollective expects to transition to a model which establishes independent roles\nfor the Governor and Servicer, allowing them to modify the configuration values\nafforded to them independently. This change would also remove controllability of\nthe Resource Metering Config without a protocol upgrade.\n\n\nOSSIFIED GASLIMITS\n\nBecause the OP Stack’s performance is rapidly improving, the GasLimit\nconfigurability is unbounded (subject to the relevant Governing Policy above).\nHowever, as the rate of change slows, the Collective expects to set a hard upper\nbound, which can only be changed via upgrade.\n\n\nDIRECT FEE MARGIN CONTROLS\n\nToday, the “fee margin” discussed in the relevant Governing Policy above is only\nindirectly influenceable via the control of multiple other configuration\nvariables. In the future, the Collective anticipates a protocol improvement\nwhich allows the margin to be set more directly, and which imposes a strict\nupper bound of 50%, to remove the ability to perform economic censorship even\ntemporarily.",
  "views": 1251,
  "like_count": 12,
  "word_count": 2427,
  "answer": [
    {
      "content": "Great draft, thanks for putting it together. I’ve few questions that I would\nlike to present here.\n\nThe questions assume that I’m building a custom L2 rollup using Op-stack and the\nchain wants to be a part of the Superchain.\n\n> The chain’s genesis state and predeploy (0x420000...) contracts are standard,\n> uniform implementations with no malicious code.\n\n 1. Can we add one or more pre-deploy contracts, which is not malicious but\n    there to have some additional functionality for the new rollup? If one does\n    add one or more predeploys does it still qualify as a standard rollup?\n\n> A standard fee split to the Collective is enforced by smart contracts, as\n> specified [here] and implemented by [this contract].\n\n 2. Even though currently all chains use ETH as their gas token, if someone\n    wants to use a custom native gas token in future, or let’s the new rollup\n    has a feature of custom gas token and then would this affect the stance of\n    the new rollup or existing rollup as a standard Rollup chain?\n\n 3. Adding to the above question how would fee split work in that case if custom\n    gas token is implemented/used? Emphasis on custom gas token because let’s\n    say a chain is made for some specific usecase other than the primary\n    use-cases that current chains have, something like redstone for gaming or\n    some chain for other real-world use-case. How would this affect it?\n\nThanks in advance!",
      "created_at": "2024-06-19T19:12:42.649Z",
      "trust_level": 1,
      "username": "kira",
      "admin": false,
      "moderator": false,
      "staff": false,
      "like_count": 2
    },
    {
      "content": "Hi Butterbum\n\nAll chains use ETH as their gas token, so it would get paid in ETH",
      "created_at": "2024-05-29T17:04:02.489Z",
      "trust_level": 4,
      "username": "op_julian",
      "admin": true,
      "moderator": true,
      "staff": true,
      "like_count": 1
    },
    {
      "content": "Great work in putting this together, this charter will serve as a vital tool in\nensuring all Superchains are compliant with the law of chains and more broadly\nthe Optimism ethos.\n\n\n[https://europe1.discourse-cdn.com/bc41dd/original/1X/391d6e71a279a9f881f75bfa7df5cdf3cf905b3f.png]\nsystem:\n\n> Collective Fee Take\n\nWill we( the collective) be expecting this fee split to be paid in OP tokens or\nin ETH",
      "created_at": "2024-05-27T11:25:11.278Z",
      "trust_level": 2,
      "username": "Butterbum",
      "admin": false,
      "moderator": false,
      "staff": false,
      "like_count": 0
    },
    {
      "content": "Hello, I noticed that the draft mentions: “The chain’s genesis state and\npredeploy (0x420000…) contracts are standard, uniform implementations with no\nmalicious code.”\n\nIs this saying that there can be no other predeploys/state in addition to the\ndefault genesis.json, or is this only requiring that the predeploys/genesis\nstate specified in the default OP Stack configuration are not altered?\n\nWith the Worldchain launch, we will need to migrate the existing WorldApp user’s\nSafe wallets from Optimism to Worldchain. We were planning on setting the\ngenesis state with a predeploy for each user’s Safe address along with the\nnecessary storage slots set.\n\nIn general, it would be helpful to have the flexibility to include additional\npredeploys in the genesis state.",
      "created_at": "2024-06-08T01:45:43.809Z",
      "trust_level": 0,
      "username": "0xKitsune",
      "admin": false,
      "moderator": false,
      "staff": false,
      "like_count": 0
    }
  ],
  "created_at": "2024-05-13T10:44:36.027Z"
}